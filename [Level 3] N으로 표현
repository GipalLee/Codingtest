def solution(N, number):
    # 예외
    if N == number:
        return 1
        
    # 1. [ SET x 8 ] 초기화 (8번 이상 사용할 경우 -1을 반환하라고 했기때문에)
    s = [ set() for x in range(8) ] 

    # 2. 각 set마다 기본 수 "N" * i 수 초기화 (5,55,555 이렇게 그냥 이어붙인 수 추가해줌)
    for i,x in enumerate(s, start=1):
        x.add( int( str(N) * i ) )

    # 3. n 일반화
    #   { 
    #       "n" * i U 
    #       1번 사용 set 사칙연산 n-1번 사용 set U
    #       2번 사용 set 사칙연산 n-2번 사용 set U
    #       ...
    #       n-1번 사용 set 사칙연산 1번 사용 set, 
    #    } 
    # number를 가장 최소로 만드는 수 구함.
    for i in range(1, 8): # N을 몇번 사용하는지
        for j in range(i):
            for op1 in s[j]:
                for op2 in s[i-j-1]:
                    s[i].add(op1 + op2)
                    s[i].add(op1 - op2)
                    s[i].add(op1 * op2)
                    if op2 != 0:
                        s[i].add(op1 // op2)

        if  number in s[i]:
            answer = i + 1
            break

    else:
        answer = -1

    return answer
